<div class="row">
<!-- Show measure calculation -->
<% pop_keys = RecordsHelper::PROPORTION_POPULATION_KEYS %>
<% pop_map = { 'IPP' => 'initial-population', 'DENOM' => 'denominator', 'NUMER' => 'numerator', 'DENEX' => 'denominator-exclusion', 'DENEXCEP' => 'denominator-exception' } %>

<div class="col-md-6" style="overflow-y: scroll; height:100vh;">
  <h2>Measure Information</h2>
  <% {
        @continuous_measures => RecordsHelper::CV_POPULATION_KEYS,
        @proportion_measures => RecordsHelper::PROPORTION_POPULATION_KEYS
      }.each do |measures, pop_keys| %>
    <% if measures.length.positive? %>
      <table class="table table-condensed">
        <thead>
          <tr>
            <td></td>
            <% pop_keys.each do |population| %>
              <th scope="col" class="text-center"><%= population_label(@bundle, population) %></th>
            <% end %>
          </tr>
        </thead>
        <tbody>
          <% @results.select { |result| measures.map(&:id).include?(result.measure_id) }.map(&:measure_report).each_with_index do |result, index|
              measure_name = result.measure.split('/').last.split('-').last
              grouped_results = group_calculation_results(result)
              grouped_results.each do |grouped_result| %>
              <tr>
                <th class="abbreviated" scope="row">
                  <%= "#{measure_name} (#{grouped_result.display_name})" %>
                </th>
                <% pop_keys.each do |population| %>
                  <td class="text-center">
                  <% values = grouped_result.populations.select { |p| p.code.coding[0].code == RecordsHelper::POPULATION_MAP[population] }
                  value = values.count.positive? ? values.first.count : nil %>
                  <% if value && value.positive? %>
                    <span class="sr-only">Pass</span>
                    <span class="fa-stack result-marker">
                      <%= icon('fas fa-stack-2x', 'circle', :"aria-hidden" => true) %>
                      <strong class="fa-stack-1x result-text"><span class="sr-only">value of </span><%= value %></strong>
                    </span>
                  <% else %>
                    <span class="sr-only">Fail</span>
                    <%= icon('far fa-2x empty-marker', 'circle', :"aria-hidden" => true) %>
                  <% end %>
                </td>
                <% end %>
              </tr>
            <% end %>
            <% next unless result.text %>
            <tr><td colspan="<%= pop_keys.size + 1 %>">
              <button class="collapsible">View Logic Highlighting</button>
              <div class="collapse-content">
                <%= render 'patient_measure_highlighting', :html => result.text.div, :index => index, :measure_name => measure_name %>
              </div>
            </td></tr>
          <% end %>
        </tbody>
      </table>
    <% end %>
  <% end %>
</div>

  <!-- TODO: Add in Clinical Data -->
  <div class="col-md-6" style="overflow-y: scroll; height:100vh;">
    <div class="btn-group" align="right">
      <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"> Select Measure(s) <span class="caret"></span>
      </button>
      <ul class="dropdown-menu">
      <li>
      <% if @vendor %>
        <%= link_to "All Measures", vendor_record_path(:vendor_id => @vendor.id, :id => @record.id, :bundle_id => @bundle.id), method: :get %>
       <% else %>
        <%= link_to "All Measures", bundle_record_path(:bundle_id => @bundle.id, :id => @record.id), method: :get %>
      <% end %></li>
      <% @measures.each do |measure| %>
        <li>
          <% if @vendor %>
            <%= link_to "#{measure.name}", vendor_record_path(:vendor_id => @vendor.id, :id => @record.id, :bundle_id => @bundle.id, :measure_id => measure.id), method: :get %>
           <% else %>
            <%= link_to "#{measure.name}", bundle_record_path(:bundle_id => @bundle.id, :id => @record.id, :measure_id => measure.id), method: :get %>
          <% end %>
        </li>
      <% end %>
      </ul>
    </div>
    <% patient_resource = @record.patient.entry.find { |e| e.resource.resourceType == 'Patient' }.resource %>
    <%= react_component("PatientView", { data: patient_resource, patient: patient_resource, entry: @relevant_entries, errors: patient_resource.validate }) %>
  </div>
</div>
